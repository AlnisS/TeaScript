FDEF(init())
  
EFDEF()
FDEF(main())
  #PRINT(15, test())
  #PRINT(16, test()+test())
  #PRINT(17, printalias(1234))
  #PRINT(18, addtest(1, 2))
  #PRINT(19, 2 * 3 ** 4 * 2)
  #PRINT(20, (0-11) % 3)
  #PRINT(21, (0-11) %% 3)
  
  PRINT(22, true ^ true)
  PRINT(23, true ^ false)
  PRINT(24, false ^ true)
  PRINT(25, false ^ false)
  
  PRINT(26, abs(0-1))
  PRINT(27, ceil(.1))
  PRINT(28, floor(1.9))
  PRINT(29, floordiv(7,2))
  PRINT(30, max(3, 4))
  PRINT(31, min(4, 3))
  PRINT(32, exp(2))
  PRINT(33, log(exp(2)))
  PRINT(34, log10(1000))
  PRINT(35, pow(2, 4))
  PRINT(36, sqrt(64))
  PRINT(37, sin(3.14159*5/6))
  PRINT(38, cos(3.14159*4/6))
  PRINT(39, tan(3.14159*.25))
  PRINT(40, asin(1/2))
  PRINT(41, acos(1/2))
  PRINT(42, atan(1))
  PRINT(43, atan2(0-2, 2))
  PRINT(44, sinh(1))
  PRINT(45, cosh(1))
  PRINT(46, tanh(1))
  PRINT(47, todeg(3.14159*.75))
  PRINT(48, torad(60))
  PRINT(49, sq(6))
  
  PRINT(50, !false)
  PRINT(51, !  (  1 > 3 ||  4  < 3)  )
  
  PRINT(F, fib(9))
  PRINT(A, fib(6))
  PRINT(FB, fib(fib(6)+1))
  
  PRINT(fac, factorial(5))
  PRINT(gcd, gcd(102, 68))
  PRINT(wml, weirdmul(8, 16))
  PRINT(bia, binomial(12, 4))
  PRINT(bib, binomial(10, 5))
  PRINT(sqa, square(4))
  PRINT(sqb, square(12))
  PRINT(cua, cube(2))
  PRINT(cub, cube(5))
EFDEF()

FDEF(square())
  BRANCH(a1 == 0, square.s)
    RET(square(a1-1) + 2 * a1 - 1)
  LABEL(square.s)
    RET(0)
EFDEF()

FDEF(cube())
  BRANCH(a1 == 0, cube.s)
    RET(cube(a1 - 1) + 3 * square(a1) - 3 * a1 + 1)
  LABEL(cube.s)
    RET(0)
EFDEF()

FDEF(binomial())
  BRANCH(a2 == 0, binomial.a)
  BRANCH(a1 == 0, binomial.b)
    RET(binomial(a1-1, a2) + binomial(a1-1, a2-1))
  LABEL(binomial.a)
    RET(1)
  LABEL(binomial.b)
    RET(0)
EFDEF()

FDEF(gcd())
  BRANCH(a2 == 0, gcd.simple)
    RET(gcd(a2, a1 % a2))
  LABEL(gcd.simple)
    RET(a1)
EFDEF()

FDEF(weirdmul())
  BRANCH(a2 == 0, weridmul.a)
  BRANCH(a2 % 2 == 0, weirdmul.b)
    RET(weirdmul(a1 + a1, floordiv(a2, 2)) + a1)
  LABEL(weridmul.a)
    RET(0)
  LABEL(weirdmul.b)
    RET(weirdmul(a1 + a1, floordiv(a2, 2)))
EFDEF()

FDEF(factorial())
  BRANCH(a1 == 1, factorial.easy)
    RET(a1 * factorial(a1 - 1))
  LABEL(factorial.easy)
    RET(1)
EFDEF()

FDEF(addtest())
  RET(a1+a2)
EFDEF()

FDEF(fib())
  BRANCH(a1 <= 1, fib.simple)
    RET(fib(a1-1) + fib(a1-2))
  LABEL(fib.simple)
    RET(a1)
EFDEF()

FDEF(printalias())
  RET(a1)
EFDEF()

FDEF(test())
  RET(2.5)
EFDEF()